% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utest_classify.R
\name{utest_classify}
\alias{utest_classify}
\title{Test for classification in one of two groups.}
\usage{
utest_classify(x, data, groups, bootstrap_iter = 1000)
}
\arguments{
\item{x}{A numeric vector to be classified.}

\item{data}{A data.frame. Each row must be an observation and each column a dimension.
The last column must be the group factor with only two groups.}

\item{groups}{A factor or character vector. It must contain only two elements: the first and second group names, respectively.}

\item{bootstrap_iter}{Numeric scalar. The number of bootstraps. It's recommended
\eqn{1000 < bootstrap_iter < 10000}.}
}
\value{
A list with class "utest_classify" containing the following components:
    \item{statistic}{the value of the test statistic.}
    \item{p_value}{The p-value for the test.}
    \item{groups}{the levels that identify the groups in the data.}
    \item{bootstrap_iter}{the number of bootstrap iterations.}
}
\description{
The null hypothesis is that the new data is not well classified into the first group and the
alternative hypothesis is that the data is well classified into the first group.
}
\examples{
# Example 1
# Five observations from each group, G1 and G2. Each observation has 60 dimensions.
x <- matrix(c(rnorm(300, 0), rnorm(300, 10)), nrow = 60)
data <- data.frame(t(x))
data['group'] <- factor(rep(c('group1', 'group2'), each = 5))
# Test data comes from G1.
x <- rnorm(60, 0)
# The test correctly indicates that the test data should be classified into G1 (p < 0.05).
utest_classify(x, data, groups = c("group1", "group2"))

# Example 2
# Five observations from each group, G1 and G2. Each observation has 60 dimensions.
x <- matrix(c(rnorm(300, 0), rnorm(300, 10)), nrow = 60)
data <- data.frame(t(x))
data['group'] <- factor(rep(c('group1', 'group2'), each = 5))
# Test data comes from G2.
x <- rnorm(60, 10)
# The test correctly indicates that the test data should be classified into G2 (p > 0.05).
utest_classify(x, data, groups = c("group1", "group2"))
}
